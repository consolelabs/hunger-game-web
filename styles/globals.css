@font-face {
  font-family: 'ArcadeClassic';
  src: url('/assets/fonts/arcade-classic.ttf');
}

html, body, #__next {
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  font-family: 'ArcadeClassic', sans-serif;
  font-size: 48px;
}

* {
  box-sizing: border-box;
  position: relative;
}

button {
  font-family: 'ArcadeClassic', sans-serif;
  color: white;
}

button:hover {
  opacity: 0.8;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

@keyframes background-sprites {
  to { background-position: -16rem; }
}

.game-container {
  display: flex;
  width: 100%;
  height: 100%;
  background-image: url('/assets/spritesheets/terrains/water.png');
  background-size: 4rem;
  animation: background-sprites 1.5s steps(3) infinite;
  overflow: hidden;
}


/* Island */

.island {
  position: relative;
  margin: auto;
  /* Island size 16 x 16 */
  width: 16rem;
  height: 16rem;
  display: flex;
  flex-direction: column;
}

.island .row {
  width: 100%;
  display: flex;
}

.island .col {
  width: 1rem;
  height: 1rem;
  background-image: url('/assets/spritesheets/terrains/grass.png');
  background-size: 6rem;
  background-position-y: -6rem;
} 

.island .row:first-of-type .col {
  background-position-x: -1rem;
  background-position-y: 0;
}

.island .col:first-of-type {
  background-position-x: 0;
  background-position-y: -1rem;
}

.island .col:last-of-type {
  background-position-x: -2rem;
  background-position-y: -1rem;
}

.island .row:last-of-type .col {
  background-position-x: -1rem;
  background-position-y: -2rem;
}

.island .row:first-of-type .col:first-of-type { 
  background-position-x: 0;
  background-position-y: 0;
}

.island .row:first-of-type .col:last-of-type { 
  background-position-x: -2rem;
  background-position-y: 0;
}

.island .row:last-of-type .col:first-of-type { 
  background-position-x: 0;
  background-position-y: -2rem;
}

.island .row:last-of-type .col:last-of-type { 
  background-position-x: -2rem;
  background-position-y: -2rem;
}

/* Playground */

.playground {
  position: absolute;
  margin: auto;
  /* Size 12 x 12 */
  width: 12rem;
  height: 12rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.grid {
  display: flex;
  flex-direction: column;
  background: white;
  border-radius: 0.125rem;
  overflow: hidden;
  border: 0.05rem solid rgba(0, 0, 0, 0.3);
  box-sizing: content-box;
}

.playground .col {
  width: 1rem;
  height: 1rem;
  background-image: url('/assets/spritesheets/terrains/dirt.png');
  background-size: 8rem;
  background-position-y: -1rem;
  background-position-x: -1rem;
}

.playground .row:nth-of-type(2n) .col:nth-of-type(2n + 1)::before,
.playground .row:nth-of-type(2n + 1) .col:nth-of-type(2n)::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.1);
}

.playground .row {
  width: 100%;
  display: flex;
}

@keyframes flicker {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

.playground .col.next::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgb(173, 255, 47, 0.5);
  animation: flicker 1.5s infinite;
}

/* Player */

.players {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@keyframes player-idle-sprites {
  from { background-position: 0 }
  to { background-position: -6rem; }
}

@keyframes player-hit-sprites {
  from { background-position: -19.5rem; }
  to { background-position: -24rem; }
}

.player {
  width: 1.5rem;
  height: 1.5rem;
  position: absolute;
  transform: translate(-0.25rem, -0.5rem);
  transition: 0.3s all;
}

.player::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: 36rem;
}

.player:nth-of-type(1)::before {
  background-image: url('/assets/spritesheets/players/1.png');
}

.player:nth-of-type(2)::before {
  background-image: url('/assets/spritesheets/players/2.png');
}

.player:nth-of-type(3)::before {
  background-image: url('/assets/spritesheets/players/3.png');
}

.player:nth-of-type(4)::before {
  background-image: url('/assets/spritesheets/players/4.png');
}

.player.idle::before {
  animation: player-idle-sprites 0.5s steps(4) infinite;
}

.player.hit::before {
  animation: player-hit-sprites 0.5s steps(3) infinite;
}

.player.face-left::before {
  transform: scaleX(-1);
}

.nametag {
  padding: 0.125rem;
  font-size: 0.375rem;
  min-width: 1.5rem;
  max-width: 3rem;
  height: 0.75rem;
  box-shadow: 0 0 0.05rem black;
  border-radius: 0.1rem;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: absolute;
  top: -0.5rem;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
}

.nametag:hover {
  opacity: 0.5;
}

.arrow {
  width: 1rem;
  height: 1rem;
  position: absolute;
  transform: rotate(90deg) translateX(-50%);
}

/* Movement Controls */

.movement-controls {
  z-index: 1;
  position: absolute;
  width: 6rem;
  height: 6rem;
  bottom: 1rem;
  right: 1rem;
}

.movement-controls button {
  width: 2rem;
  height: 2rem;
  cursor: pointer;
  position: absolute;
  background-image: url('/assets/spritesheets/controls/buttons.png');
  background-size: 6rem;
  background-position-x: -0.5rem;
  background-position-y: -6.5rem;
  background-color: transparent;
  border: 0;
  outline: 0;
  font-size: 0.5rem;
}

.movement-controls button.up {
  top: 0;
  left: 2rem;
}

.movement-controls button.down {
  bottom: 0;
  left: 2rem;
}

.movement-controls button.left {
  top: 2rem;
  left: 0;
}

.movement-controls button.right {
  top: 2rem;
  right: 0;
}

.movement-controls button.selected {
  background-position-x: -3.5rem;
  background-position-y: -6.5rem;
  filter: drop-shadow(0 0 5px white);
}

.bomb {
  width: 1.5rem;
  height: 1.5rem;
  position: absolute;
  transform: translate(-16.67%, -16.67%);
}

/* Logs */

.logs {
  z-index: 1;
  position: absolute;
  bottom: 0;
  left: 1rem;
}

.logs.inspecting {
  left: 50%;
  transform: translateX(-50%);
}

.logs-container {
  display: flex;
  max-width: calc(100vw - 3rem);
  overflow-x: auto;
  overflow-y: hidden;
}

.log {
  width: 10rem;
  height: 10rem;
  background-image: url('/assets/spritesheets/controls/setting-menu.png');
  background-size: 22.5rem;
  background-position-x: -12rem;
  background-position-y: -1rem;
  padding: 0.75rem 0.75rem 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  flex-shrink: 0;
  transform: translateY(7rem);
  transition: all 0.3s;
}

.log.expanded {
  transform: translateY(0);
}

.log .header {
  color: white;
  font-size: 0.75rem;
  text-align: center;
  margin-bottom: 0.25rem;
  padding: 0 0.5rem;
  border-bottom: 1px solid white;
}

.logs .content {
  flex: 1;
  width: 100%;
  overflow: auto;
}

.log-item {
  font-size: 0.375rem;
  height: 1rem;
  padding: 0.125rem;
  margin-bottom: 0.125rem;
  border-radius: 0.125rem;
  background-color: white;
  border: 0.05rem solid rgba(0, 0, 0, 0.5);
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
}

.log-item .success {
  color: green;
}

.log-item .danger {
  color: red;
}

.logs .expand-button {
  position: absolute;
  bottom: 1rem;
  right: -1.25rem;
  width: 1rem;
  height: 1rem;
  background-image: url('/assets/spritesheets/controls/buttons.png');
  background-size: 3rem;
  background-position-x: -0.25rem;
  background-position-y: -1.75rem;
  background-color: transparent;
  border: 0;
  outline: 0;
  color: white;
  cursor: pointer;
}

/* Left Corner */

.left-corner {
  position: absolute;
  top: 1rem;
  left: 1rem;
  font-size: 0.75rem;
  color: white;
  line-height: 1;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.left-corner .items {
  margin-bottom: 0.5rem;
}

.left-corner .items > span {
  margin-right: 0.875rem;
}

/* Points */

.points {
  font-size: 1rem;
}

/* Rounds */

.rounds {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1rem;
}

.rounds .loader {
  width: 0.75rem;
  height: 0.75rem;
  margin-left: 0.125rem;
}

.rounds .countdown {
  font-size: 1rem;
}

.rounds .countdown small {
  font-size: 0.75rem;
}

/* Start Screen */

.start-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 10;
  font-size: 0.5rem;
}

.start-screen > * {
  margin-bottom: 0.5rem;
  color: white;
}

.start-screen .join-form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.play-button {
  width: 4rem;
  height: 1.3333rem;
  background-image: url('/assets/spritesheets/controls/play-button.png');
  background-size: 8rem;
  background-color: transparent;
  border: 0;
  outline: 0;
  cursor: pointer;
  font-size: 0.5rem;
}

.start-screen input {
  border-radius: 0.125px;
  font-size: 0.375rem;
  padding: 0.125rem;
  text-align: center;
}

/* Right corner */

.right-corner {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1rem;
  color: white;
  line-height: 1;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}

.right-corner .quit-button {
  width: 3rem;
  height: 1rem;
  background-image: url('/assets/spritesheets/controls/play-button.png');
  background-size: 6.125rem;
  background-color: transparent;
  border: 0;
  outline: 0;
  cursor: pointer;
  font-size: 0.5rem;
}

/* Goal */

.goals {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.goal {
  position: absolute;
  width: 1.5rem;
  height: 1.5rem;
  transform: translate(-12.5%, -33.33%);
}

.goal-image {
  width: 1.3333rem;
  height: 1.3333rem;
}

.goal.a {
  filter: hue-rotate(0deg)
}

.goal.b {
  filter: hue-rotate(145deg)
}

.goal.c {
  filter: hue-rotate(200deg)
}

.goal.d {
  filter: hue-rotate(250deg)
}

/* Cell Value */

.grid .item {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.item {
  width: 0.75rem;
  height: 0.75rem;
  background-image: url('/assets/spritesheets/items/foods.png');
  background-size: 3rem;
  background-position-x: 0;
  background-position-y: -0.75rem;
  display: inline-block;
}

.item.point-4 {
  background-position-x: 0;
  background-position-y: -2.25rem;
}

.item.point-8 {
  background-position-x: -1.5rem;
  background-position-y: -0.75rem;
}

.item.point-16 {
  background-position-x: -2.25rem;
  background-position-y: -2.25rem;
}

/* Winner */

.winner-tag {
  font-size: 0.375rem;
  width: 3rem;
  height: 0.5rem;
  box-shadow: 0 0 0.05px black;
  border-radius: 0.05rem;
  background: white;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  color: green;
}

.win-screen {
  position: fixed;
  z-index: 999;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
}

/* Audio Button */

.audio-button {
  border: 0;
  outline: 0;
  font-size: 0.5rem;
  text-decoration: underline;
  background: transparent;
}

/* Inspecting input */

.inspecting-input {
  font-size: 0.375rem;
}

@media only screen and (max-width: 1599px) {
  html, body, #_next {
    font-size: 32px;
  }

  .expand-button svg {
    width: 12px;
    height: 12px;
  }
}

@media only screen and (max-width: 991px) {
  html, body, #_next {
    font-size: 24px;
  }

  .expand-button svg {
    width: 12px;
    height: 12px;
  }
}


@media only screen and (max-width: 400px) {
  .left-corner {
    top: 0.5rem;
    left: 0.5rem;
  }

  .right-corner {
    top: 0.5rem;
    right: 0.5rem;
  }

  .logs {
    bottom: 0;
    left: 0;
  }

  .logs-container {
    max-width: calc(100vw - 1.5rem);
  }

  .logs.inspecting {
    left: 0;
    transform: none;
  }

  .log {
    width: 6.67rem;
    height: 6.67rem;
    background-size: 15rem;
    background-position-x: -8rem;
    background-position-y: -0.67rem;
    transform: translateY(4.7rem);
  }

  .movement-controls {
    bottom: 0.5rem;
    right: 0.5rem;
  }
}
